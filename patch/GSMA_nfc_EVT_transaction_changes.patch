diff --git a/SN100x/src/nfa/hci/nfa_hci_act.cc b/SN100x/src/nfa/hci/nfa_hci_act.cc
index 7d62c2c..96ebb23 100644
--- a/SN100x/src/nfa/hci/nfa_hci_act.cc
+++ b/SN100x/src/nfa/hci/nfa_hci_act.cc
@@ -2623,7 +2623,9 @@ bool nfa_hci_check_set_apdu_pipe_ready_for_next_host ()
 
     for(xx = 0; xx < NFA_HCI_MAX_HOST_IN_NETWORK; xx++) {
         p_host = &nfa_hci_cb.cfg.host[xx];
-        if (nfa_hci_cb.curr_nfcee == p_host->host_id) {
+        uint8_t nfcee = nfa_hciu_get_hci_host_id(nfa_hci_cb.curr_nfcee);
+        LOG(ERROR) << StringPrintf("after updating uicc id%x", nfcee);
+        if (nfcee == p_host->host_id) {
             nfa_hciu_clear_host_resetting(p_host->host_id, NFCEE_HCI_NOTIFY_ALL_PIPE_CLEARED);
             if(p_host->host_id == NFA_HCI_FIRST_PROP_HOST)
               nfa_hci_api_add_prop_host_info();
diff --git a/SN100x/src/nfa/hci/nfa_hci_utils.cc b/SN100x/src/nfa/hci/nfa_hci_utils.cc
index 2b6ff3e..4fa8513 100644
--- a/SN100x/src/nfa/hci/nfa_hci_utils.cc
+++ b/SN100x/src/nfa/hci/nfa_hci_utils.cc
@@ -2105,4 +2105,31 @@ void nfa_hciu_add_host_resetting(uint8_t host_id, uint8_t reset_type) {
       }
   }
 }
+
+/*******************************************************************************
+**
+** Function         nfa_hciu_get_hci_host_id
+**
+** Description      This function returns hci host id for given nfceeid
+**
+** Returns          hci host id 
+**
+*******************************************************************************/
+uint8_t nfa_hciu_get_hci_host_id(uint8_t nfceeid)
+{
+  switch(nfceeid)
+  {
+    case NFA_HCI_FIRST_DYNAMIC_HOST:
+      return NFA_HCI_UICC_HOST;
+    case NFA_HCI_FIRST_PROP_HOST:
+      return NFA_HCI_FIRST_PROP_HOST;
+    case NFA_HCI_FIRST_DYNAMIC_HOST + 1:
+      return NFA_HCI_FIRST_DYNAMIC_HOST + 1;
+    case NFA_HCI_FIRST_DYNAMIC_HOST + 2:
+      return NFA_HCI_FIRST_DYNAMIC_HOST + 2;
+    default:
+      return 0x00;
+  }
+    return 0x00;
+}
 #endif
\ No newline at end of file
diff --git a/SN100x/src/nfa/include/nfa_hci_int.h b/SN100x/src/nfa/include/nfa_hci_int.h
index 169736e..3aca382 100644
--- a/SN100x/src/nfa/include/nfa_hci_int.h
+++ b/SN100x/src/nfa/include/nfa_hci_int.h
@@ -57,6 +57,7 @@ extern uint8_t HCI_LOOPBACK_DEBUG;
 
 #define NFA_HCI_HOST_ID_UICC0 0x02 /* Host ID for UICC 0 */
 #if (NXP_EXTNS == TRUE)
+#define NFA_HCI_HOST_ID_DYNAMIC_HOST0 0x80 /*Host ID for prop dyn host 0*/
 #define NFA_HCI_HOST_ID_PROP_HOST0 0xC0 /*Host ID for prop eSE 0*/
 
 #define NFA_HCI_FIRST_UICC_HOST         NFA_HCI_HOST_ID_UICC0 /* Host ID for UICC 0 */
@@ -65,6 +66,9 @@ extern uint8_t HCI_LOOPBACK_DEBUG;
 #define NFA_HCI_FIRST_PROP_HOST         NFA_HCI_HOST_ID_PROP_HOST0 /* Host ID for PROP HOST 0 */
 #define NFA_HCI_LAST_PROP_HOST          (NFA_HCI_HOST_ID_PROP_HOST0 + NFA_HCI_MAX_NUM_PROP_HOST - 1)
 
+#define NFA_HCI_FIRST_DYNAMIC_HOST      NFA_HCI_HOST_ID_DYNAMIC_HOST0 /* Host ID for DYN HOST 0 */
+#define NFA_HCI_LAST_DYNAMIC_HOST       (NFA_HCI_HOST_ID_DYNAMIC_HOST0 + NFA_HCI_MAX_NUM_PROP_HOST - 1)
+
 /* Static pipes - ADMIN Pipe, Link Management pipe and Static APDU pipes */
 #define NFA_HCI_MAX_NUM_STATIC_PIPES         (2)
 #else
@@ -757,6 +761,6 @@ extern void nfa_hciu_update_host_list (uint8_t data_len, uint8_t *p_host_list);
 extern void nfa_hciu_add_host_resetting(uint8_t host_id, uint8_t reset_cfg);
 extern void nfa_hciu_clear_host_resetting(uint8_t host_id, uint8_t reset_cfg);
 extern void nfa_hci_handle_pending_host_reset();
-
+extern uint8_t nfa_hciu_get_hci_host_id(uint8_t nfceeid);
 #endif
 #endif /* NFA_HCI_INT_H */
